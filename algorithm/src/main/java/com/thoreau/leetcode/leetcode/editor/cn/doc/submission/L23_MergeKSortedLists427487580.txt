/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        
        ListNode preHead = new ListNode();
        ListNode min = new ListNode(0);
        ListNode newList = null;
        for(int i= 0; i < lists.length; i++){
            newList=mergeTwoList(newList,lists[i]);
        }
        return newList;
    }
    private ListNode mergeTwoList(ListNode l1,ListNode l2){
        if(l1==null){
            return l2;
        }
        if(l2==null){
            return l1;
        }
        if(l1.val>l2.val){
            l2.next = mergeTwoList(l1,l2.next);
            return l2;
        }else{
            l1.next = mergeTwoList(l1.next,l2);
            return l1;
        }
    }
}
//runtime:440 ms
//memory:N/A
